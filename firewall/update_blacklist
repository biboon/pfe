#!/bin/bash


TMPFOLDER=/tmp/
TMPFILEEXT=.blk.tmp
IPT=/sbin/iptables

WHITELIST=/etc/iptables/whitelist.txt
BLACKLIST=/etc/iptables/blacklist.txt
NOTIF=/etc/iptables/notif.txt


# Get SASL LOGIN authentication failed lines from mail.log
DATA=`cat /var/log/mail.log | grep 'SASL\ LOGIN\ authentication\ failed\|Relay\ access\ denied'`

# Get ips only
DATA=`echo "$DATA" | sed -ne 's/.*\[\([0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\)\].*/\1/p'`

# Sort and remove dubs
echo "$DATA" | sort | uniq >> ${TMPFOLDER}saslips${TMPFILEEXT}

# Remove ips of the whitelist
DATA=`cat ${TMPFOLDER}saslips${TMPFILEEXT} | grep -vwf $WHITELIST`

# Remove ips already in the blacklist
echo "$DATA" | grep -vwf $BLACKLIST >> ${TMPFOLDER}iplist${TMPFILEEXT}


# Do the job
if [ -s ${TMPFOLDER}iplist${TMPFILEEXT} ]
then
	# Append to blacklist
	CURDATE=`date +%D\ %T`
	echo '' >> $BLACKLIST
	echo "#$CURDATE" >> $BLACKLIST
	cat ${TMPFOLDER}iplist${TMPFILEEXT} >> $BLACKLIST

	# Copy new ip blacklisted in the notif file
	if [ -e $NOTIF ]; then rm $NOTIF; fi
	echo "#$CURDATE" >> $NOTIF
	cat ${TMPFOLDER}iplist${TMPFILEEXT} >> $NOTIF

	# Block the new ips
	while read line
	do
		[ -z "$line" ] && continue
		if [ ! ${line:0:1} == "#" ]
		then
			echo "Blocking new ip $line..."
			$IPT -I INPUT 1 -i eth0 -s $line -j DROP
		fi
	done < ${TMPFOLDER}iplist${TMPFILEEXT}

	# Save modifications
	service iptablesd save
else
	echo 'Nothing new to block'
fi


# Remove temp files
rm -f ${TMPFOLDER}*${TMPFILEEXT}
